<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chomsky!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Decimálisból unárisba átváltó Turing gép</title>
        
        <para>
            Unáris azaz egyes számrendszer minden számot megfelelő db szimbólummal ábrázol. Ilyen például amikol vonalakkal irjuk fel a számokat egy vonal eggyet ér. Az alább látható programon látható, hogy is működik ez a gyakorlatban.
        </para>
        
          <programlisting><![CDATA[
include <iostream>
using namespace std;

int main ()
{
  int z;
  cout << "Adj meg egy számot\n";
  cin >> z;
  cout << Unáris alakja: ";
  for (int i = 0; i < z; i++)
    {
      cout << "|";
    }
  
}]]>
            </programlisting>

        
    </section>        
        
    <section>
        <title>Az a<superscript>n</superscript>b<superscript>n</superscript>c<superscript>n</superscript> nyelv nem környezetfüggetlen</title>
        <para>
            Mutass be legalább két környezetfüggő generatív grammatikát, amely ezt a nyelvet generálja!
        </para>
         <para>
    
Változók(N): A, B, C
Konstansok(T): a, b, c
Kezdő elem(S): S
Szabályok(H): S-->AaBcC; AaB-->aa; cC-->bbC; C-->cc; Aa-->aaB; Ac-->bc; BB-->abbA
            
            S       (S-->AaBcC)     S       (S-->AaBcC)
            AaBcC   (AaB-->aa)      AaBcC   (Aa-->aaB)
            aacC    (cC-->bbC)      aaBBcC  (BB-->abbA)
            aabbC   (C-->cc)        aaabbAcC(Ac-->bc)
            aabbcc                  aaabbbcC(C-->cc)
                                    aaabbbccc
        </para>
        <para>
Változók(N): X, Y, Z
Konstansok(T): a, b, c
Kezdő elem(S): S
Szabályok(H): S-->XabYcZ; Xab-->aaX; XY-->bbY; YcZ-->cc; Yc-->bX; XZ-->bYcZc; Xa-->aaa

            S       (S-->XabYcZ)    S           (S-->XabYcZ)
            XabYcZ  (Xab-->aaX)     XabYcZ      (Yc-->bX)
            aaXYcZ  (XY-->bbY)      XabbXZ      (XZ-->bYcZc)
            aabbYcZ (YcZ-->cc)      XabbbYcZc   (YcZ-->cc)
            aabbcc                  Xabbbccc    (Xa-->aaa)
                                    aaabbbccc
        

        </para>
    </section>        
                
    <section>
        <title>Hivatkozási nyelv</title>
        <para>
            A <citation>KERNIGHANRITCHIE</citation> könyv C referencia-kézikönyv/Utasítások melléklete alapján definiáld 
            BNF-ben a C utasítás fogalmát!
            Majd mutass be olyan kódcsipeteket, amelyek adott szabvánnyal nem fordulnak (például C89), mással (például C99) igen.
        </para>
         <para>
            A BNF(Backus-Naur-forma) formális nyelvek leírására használatos eszköz. Természezes nyelvek és programozási nyelvek nyelvtanát adják meg például a segítségével.
        </para>
        <programlisting><![CDATA[
for(int i = 0; i < 5; i++)
     ]]></programlisting>
        <para>
            Ez a programrészlet c89-al hibát ír ki a ciklusfejben deklarált változó miatt, míg c99-et alkalmazva probléma nélkül lefordul.
            //gcc elso.c -o elso -std=c89
        </para>

    </section>                     

    <section>
        <title>Saját lexikális elemző</title>
        <para>
            Írj olyan programot, ami számolja a bemenetén megjelenő valós számokat! 
            Nem elfogadható olyan megoldás, amely maga olvassa betűnként a bemenetet, 
            a feladat lényege, hogy lexert használjunk, azaz óriások vállán álljunk és ne kispályázzunk!
        </para>
        <para>
            Itt a lexer programot használjuk, ugyanis nekünk csak egy .l kiterjesztésű fájlt kell írni ami segítségével a lexer program készíti a c kódunkat. % jelek közzé tesszük azokat a programrészeket amelyeket ténylegesen látni szeretnénk a generált programban.

        </para>
        <programlisting><![CDATA[


%{
#include <stdio.h>
int realnumbers = 0;
%}
digit   [0-9]
%%
{digit}*(\.{digit}+)?   {++realnumbers; 
    printf("[realnum=%s %f]", yytext, atof(yytext));}
%%
int
main ()
{
 yylex ();
 printf("The number of real numbers is %d\n", realnumbers);
 return 0;
}

            ]]></programlisting>
    </section>                     

    <section>
        <title>l33t.l</title>
        <para>
            Lexelj össze egy l33t ciphert!
       </para>

         <programlisting><![CDATA[

        /*
Forditas:
$ lex -o l337d1c7.c l337d1c7.l 

Futtatas:
$ gcc l337d1c7.c -o l337d1c7 -lfl
(kilépés az input vége, azaz Ctrl+D)

Copyright (C) 2019
Norbert Bátfai, batfai.norbert@inf.unideb.hu

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
%{
  #include <stdio.h>
  #include <stdlib.h>
  #include <time.h>
  #include <ctype.h>

  #define L337SIZE (sizeof l337d1c7 / sizeof (struct cipher))
    
  struct cipher {
    char c;
    char *leet[4];
  } l337d1c7 [] = {

  {'a', {"4", "4", "@", "/-\\"}},
  {'b', {"b", "8", "|3", "|}"}},
  {'c', {"c", "(", "<", "{"}},
  {'d', {"d", "|)", "|]", "|}"}},
  {'e', {"3", "3", "3", "3"}},
  {'f', {"f", "|=", "ph", "|#"}},
  {'g', {"g", "6", "[", "[+"}},
  {'h', {"h", "4", "|-|", "[-]"}},
  {'i', {"1", "1", "|", "!"}},
  {'j', {"j", "7", "_|", "_/"}},
  {'k', {"k", "|<", "1<", "|{"}},
  {'l', {"l", "1", "|", "|_"}},
  {'m', {"m", "44", "(V)", "|\\/|"}},
  {'n', {"n", "|\\|", "/\\/", "/V"}},
  {'o', {"0", "0", "()", "[]"}},
  {'p', {"p", "/o", "|D", "|o"}},
  {'q', {"q", "9", "O_", "(,)"}},
  {'r', {"r", "12", "12", "|2"}},
  {'s', {"s", "5", "$", "$"}},
  {'t', {"t", "7", "7", "'|'"}},
  {'u', {"u", "|_|", "(_)", "[_]"}},
  {'v', {"v", "\\/", "\\/", "\\/"}},
  {'w', {"w", "VV", "\\/\\/", "(/\\)"}},
  {'x', {"x", "%", ")(", ")("}},
  {'y', {"y", "", "", ""}},
  {'z', {"z", "2", "7_", ">_"}},
  
  {'0', {"D", "0", "D", "0"}},
  {'1', {"I", "I", "L", "L"}},
  {'2', {"Z", "Z", "Z", "e"}},
  {'3', {"E", "E", "E", "E"}},
  {'4', {"h", "h", "A", "A"}},
  {'5', {"S", "S", "S", "S"}},
  {'6', {"b", "b", "G", "G"}},
  {'7', {"T", "T", "j", "j"}},
  {'8', {"X", "X", "X", "X"}},
  {'9', {"g", "g", "j", "j"}}
  
// https://simple.wikipedia.org/wiki/Leet
  };
  
%}
%%
.   {
      
      int found = 0;
      for(int i=0; i<L337SIZE; ++i)
      {
      
        if(l337d1c7[i].c == tolower(*yytext))
        {
        
          int r = 1+(int) (100.0*rand()/(RAND_MAX+1.0));
        
          if(r<91)
            printf("%s", l337d1c7[i].leet[0]);
          else if(r<95)
            printf("%s", l337d1c7[i].leet[1]);
          else if(r<98)
            printf("%s", l337d1c7[i].leet[2]);
          else 
            printf("%s", l337d1c7[i].leet[3]);

          found = 1;
          break;
        }
        
      }
      
      if(!found)
         printf("%c", *yytext);   
      
    }
%%
int 
main()
{
  srand(time(NULL)+getpid());
  yylex();
  return 0;
}

        ]]></programlisting>

        <para>
            A program lényege az, hogy a bemenetre kapott szöveg karaktereit egy ahoz hasonló karakterre, jelölésre cserélje az előre megadott tömb alapján.
        </para>
    </section>                     


    <section>
        <title>A források olvasása</title>
        <para>
            Hogyan olvasod, hogyan értelmezed természetes nyelven az alábbi kódcsipeteket? Például
            <programlisting><![CDATA[if(signal(SIGINT, jelkezelo)==SIG_IGN)
    signal(SIGINT, SIG_IGN);]]></programlisting>
            Ha a SIGINT jel kezelése figyelmen kívül volt hagyva, akkor ezen túl is legyen
            figyelmen kívül hagyva, ha nem volt figyelmen kívül hagyva, akkor a jelkezelo függvény
            kezelje. (Miután a <command>man 7 signal</command> lapon megismertem a SIGINT jelet, a
            <command>man 2 signal</command> lapon pedig a használt rendszerhívást.)
        </para>

        <caution>
            <title>Bugok</title>
            <para>
                Vigyázz, sok csipet kerülendő, mert bugokat visz a kódba! Melyek ezek és miért? 
                Ha nem megy ránézésre, elkapja valamelyiket esetleg a splint vagy a frama?
            </para>
        </caution>
        
        <orderedlist numeration="lowerroman">
            <listitem>                                    
                <programlisting><![CDATA[if(signal(SIGINT, SIG_IGN)!=SIG_IGN)
    signal(SIGINT, jelkezelo);
//Ha a SIGINT jel kezelését nem lehetett figyelmen kívül hagyni, akkor a jel kezelését a jelkezelo végezze.
    ]]></programlisting>
            </listitem>
           
            <listitem>                                    
                <programlisting><![CDATA[for(i=0; i<5; ++i)
//For ciklus 5 alkalommal fut le
                    ]]></programlisting>            
            </listitem>
               
            <listitem>                                    

                <programlisting><![CDATA[for(i=0; i<5; i++)
//Ugyanaz mint előbb nem lényeg hogy növeljük az i-t
                    ]]></programlisting>            
            </listitem>
         
            <listitem>                                    

                <programlisting><![CDATA[for(i=0; i<5; tomb[i] = i++)
//A tomb elemeinek az i index értékét adja meg a második elemtől kezdve az 5.-ig.
                    ]]></programlisting>            
            </listitem>
            
            <listitem>                                    

                <programlisting><![CDATA[for(i=0; i<n && (*d++ = *s++); ++i)
//Ez azért lesz bugos mivel az operandus jobb oldalán értékadás áll.
                    ]]></programlisting>            
            </listitem>
           
            <listitem>                                    

                <programlisting><![CDATA[printf("%d %d", f(a, ++a), f(++a, a));
//Kiírja a két függvény által kapott számot.
                    ]]></programlisting>            
            </listitem>
          
            <listitem>                                    

                <programlisting><![CDATA[printf("%d %d", f(a), a);
//Előzőhöz hasonóan kiírja az a-t és az f által kapott értéket amennyiben az szám.
                    ]]></programlisting>            
            </listitem>
           
            <listitem>                                    

                <programlisting><![CDATA[printf("%d %d", f(&a), a);
//Az mint az előbb csupán a fuggvénynek az a címét adjuk át
                    ]]></programlisting>            
            </listitem>
        
                
        
        </orderedlist>    
        
        
    </section>                     

    <section>
        <title>Logikus</title>
        <para>
            Hogyan olvasod természetes nyelven az alábbi Ar nyelvű formulákat?
        </para>
        <programlisting language="tex"><![CDATA[$(\forall x \exists y ((x<y)\wedge(y \text{ prím})))$ 

$(\forall x \exists y ((x<y)\wedge(y \text{ prím})\wedge(SSy \text{ prím})))$ 

$(\exists y \forall x (x \text{ prím}) \supset (x<y)) $ 

$(\exists y \forall x (y<x) \supset \neg (x \text{ prím}))$
]]></programlisting>        
        


        <para>
            Megoldás forrása: <link xlink:href="https://gitlab.com/nbatfai/bhax/blob/master/attention_raising/MatLog_LaTeX">https://gitlab.com/nbatfai/bhax/blob/master/attention_raising/MatLog_LaTeX</link>
        </para>

        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/ZexiPy3ZxsA">https://youtu.be/ZexiPy3ZxsA</link>, <link xlink:href="https://youtu.be/AJSXOQFF_wk">https://youtu.be/AJSXOQFF_wk</link>
        </para>


        <para>
            Sorrendben:
             - Végtelensok prímszám van.
            -véges sok prímszám van
           - véges sok prímszám van
           
        </para>

    </section>                                                                                                                                                                          

    <section>
        <title>Deklaráció</title>
            
        <para>
            Vezesd be egy programba (forduljon le) a következőket: 
        </para>

        <itemizedlist>
            <listitem>
                <para>egész</para>
                <programlisting><![CDATA[int a;]]></programlisting>                          
            </listitem>
            <listitem>
                <para>egészre mutató mutató</para> 
                <programlisting><![CDATA[int *b = &a;]]></programlisting>                       
            </listitem>
            <listitem>
                <para>egész referenciája</para> 
                <programlisting><![CDATA[int &r = a;]]></programlisting>                       
            </listitem>
            <listitem>
                <para>egészek tömbje</para>
                <programlisting><![CDATA[int c[5];]]></programlisting>                        
            </listitem>
            <listitem>
                <para>egészek tömbjének referenciája (nem az első elemé)</para>  <programlisting><![CDATA[int (&tr)[5] = c;]]></programlisting>                      
            </listitem>
            <listitem>
                <para>egészre mutató mutatók tömbje</para>  
                <programlisting><![CDATA[int *d[5];]]></programlisting>                      
            </listitem>
            <listitem>
                <para>egészre mutató mutatót visszaadó függvény</para> 
                <programlisting><![CDATA[int *h ();]]></programlisting>                       
            </listitem>
            <listitem>
                <para>egészre mutató mutatót visszaadó függvényre mutató mutató</para>
                 <programlisting><![CDATA[int *(*l) ();]]></programlisting>                          
            </listitem>
            <listitem>
                <para>egészet visszaadó és két egészet kapó függvényre mutató mutatót visszaadó, egészet kapó függvény</para> 
                <programlisting><![CDATA[int (*v (int c)) (int a, int b);]]></programlisting>                       
            </listitem>            
            <listitem>
                <para>függvénymutató egy egészet visszaadó és két egészet kapó függvényre mutató mutatót visszaadó, egészet kapó függvényre</para>
                <programlisting><![CDATA[int (*(*z) (int)) (int, int);]]></programlisting>                        
            </listitem>            
        </itemizedlist>            

       <para>
            Mit vezetnek be a programba a következő nevek?
        </para>

        <itemizedlist>
            <listitem>
                <programlisting><![CDATA[int a;
//int tipusú változó
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int *b = &a;
//int a-ra mutato pointer b
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int &r = a;
//int a referenciája
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int c[5];
//5 elemű int tömb
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int (&tr)[5] = c;
//előbb deklarált tömb referenciája (nem az első elemé)
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int *d[5];
//mutató tömb, ami 5 db egészre mutató pointert tartalmaz
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int *h ();
//függvény ami egészre mutató pointert ad vissza
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int *(*l) ();
//egészre mutató mutatót (*l) visszaadó függvényre mutató mutató (*(*l))
                    ]]></programlisting>            
            </listitem>
            <listitem>
                <programlisting><![CDATA[int (*v (int c)) (int a, int b)
//egészet visszaadó  és két egészet kapó (a és b) függvényre mutató mutatót (*v) visszaadó, egészet kapó függvény
                    ]]></programlisting>            
            </listitem>            
            <listitem>
                <programlisting><![CDATA[int (*(*z) (int)) (int, int);
//függvénymutató (*(*z) egy egészet visszaadó (int) és két egészet kapó függvényre mutató mutatót (*z) visszaadó, egészet kapó függvényre
                    ]]></programlisting>            
            </listitem>            
        </itemizedlist>       


       
    </section>                     


</chapter>                
